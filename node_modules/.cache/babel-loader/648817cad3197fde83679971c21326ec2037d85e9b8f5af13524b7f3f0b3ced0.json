{"ast":null,"code":"import{createSlice,createAsyncThunk,configureStore,combineReducers}from\"@reduxjs/toolkit\";import{persistReducer,persistStore}from'redux-persist';import storage from'redux-persist/lib/storage';// Fetch balance from API\nexport const fetchBalance=createAsyncThunk('dashboard/fetchBalance',async()=>{const response=await fetch('https://api.example.com/balance');// Replace with a valid API URL\nconst data=await response.json();return data.balance;});// Fetching cards from Api\nexport const fetchCardsData=createAsyncThunk('dashboard/fetchCardsData',async()=>{const response=await fetch('https/f/as/ffff');const data=await response.json();return data.cards;});//Fetching Announcements from Api\nexport const fetchAnnouncements=createAsyncThunk('dashboard/fetchAnnouncements',async()=>{const response=await fetch('https/www.card.com');const data=await response.json();return data.Announcements;});// Fetching Latest News From APi\nexport const fetchlatestNews=createAsyncThunk('dashboard/fetchlatestNews',async()=>{const response=await fetch('https/www.latestnes.com');const data=await response.json();return data.latestNews;});// Fetching Table From Api\nexport const fetchTableData=createAsyncThunk('dashboard/fetchTableData',async()=>{const response=await fetch('https/www/latest.com');const data=await response.json();return data.tableData;});// Initial state\nconst initialState={balance:0,status:'idle',error:null,cards:[],tableData:[],Announcements:[],latestNews:[]};// Create dashboard slice\nconst dashboardSlice=createSlice({name:'dashboard',initialState,reducers:{},extraReducers:builder=>{builder.addCase(fetchBalance.pending,state=>{state.status='loading...';}).addCase(fetchBalance.fulfilled,(state,action)=>{state.status='succeeded';state.balance=action.payload;}).addCase(fetchBalance.rejected,(state,action)=>{state.status='failed';state.error=action.error.message;}).addCase(fetchCardsData.fulfilled,(state,action)=>{state.status='succeeded';state.cards=action.payload;}).addCase(fetchTableData.fulfilled,(state,action)=>{state.status='succeeded';state.tableData=action.payload;}).addCase(fetchAnnouncements.fulfilled,(state,action)=>{state.status='succeeded';state.Announcements=action.payload;}).addCase(fetchlatestNews.fulfilled,(state,action)=>{state.status='succeeded';state.latestNews=action.payload;});}});// Login logout functionality\nconst initialState1={isAuthenticated:false// token: null,\n// user: null,\n};// slice for Auth functionality\nconst authSlice=createSlice({name:'auth',initialState:initialState1,reducers:{loginSuccess(state,action){state.isAuthenticated=true;// state.token= action.payload.token;\n// state.user=action.payload.user;\n},logout(state){state.isAuthenticated=false;// state.token= null;\n// state.user= null;\n}}});const rootReducer=combineReducers({dashboard:dashboardSlice.reducer,auth:authSlice.reducer});const persistConfig={key:'root',storage,// Use localStorage\nversion:1// Version\n};const persestedReducer=persistReducer(persistConfig,rootReducer);// Configure store\nexport const store=configureStore({reducer:persestedReducer,middleware:getDefaultMiddleware=>getDefaultMiddleware({serializableCheck:{ignoredActions:['persist/PERSIST']// Tell Redux to ignore the persist/persisted actions\n}})});export const persistor=persistStore(store);export const dashboardActions=dashboardSlice.actions;export const authActions=authSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","configureStore","combineReducers","persistReducer","persistStore","storage","fetchBalance","response","fetch","data","json","balance","fetchCardsData","cards","fetchAnnouncements","Announcements","fetchlatestNews","latestNews","fetchTableData","tableData","initialState","status","error","dashboardSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","initialState1","isAuthenticated","authSlice","loginSuccess","logout","rootReducer","dashboard","reducer","auth","persistConfig","key","version","persestedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor","dashboardActions","actions","authActions"],"sources":["C:/Users/pc/Desktop/React workspace/eternal-app/src/Redux/Store.js"],"sourcesContent":["import { createSlice, createAsyncThunk, configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n// Fetch balance from API\r\nexport const fetchBalance = createAsyncThunk('dashboard/fetchBalance', async () => {\r\n    const response = await fetch('https://api.example.com/balance'); // Replace with a valid API URL\r\n    const data = await response.json();\r\n    return data.balance;\r\n});\r\n// Fetching cards from Api\r\nexport  const fetchCardsData =createAsyncThunk('dashboard/fetchCardsData',async ()=>{\r\n    const response = await fetch('https/f/as/ffff');\r\n  \r\n    const data = await response.json();\r\n    return data.cards;\r\n});\r\n//Fetching Announcements from Api\r\nexport const fetchAnnouncements =createAsyncThunk('dashboard/fetchAnnouncements', async()=>{\r\n    const response = await fetch('https/www.card.com');\r\n    const data = await response.json();\r\n    return data.Announcements;\r\n});\r\n// Fetching Latest News From APi\r\nexport const fetchlatestNews =createAsyncThunk('dashboard/fetchlatestNews', async()=>{\r\n    const response = await fetch('https/www.latestnes.com');\r\n    const data = await response.json();\r\n    return data.latestNews;\r\n});\r\n// Fetching Table From Api\r\nexport const fetchTableData =createAsyncThunk('dashboard/fetchTableData', async()=>{\r\n    const response = await fetch ('https/www/latest.com');\r\n    const data = await response.json();\r\n    return data.tableData\r\n})\r\n// Initial state\r\nconst initialState = {\r\n    balance: 0,\r\n    status: 'idle',\r\n    error: null,\r\n    cards:[],\r\n    tableData:[],\r\n    Announcements:[],\r\n    latestNews:[]\r\n};\r\n// Create dashboard slice\r\nconst dashboardSlice = createSlice({\r\n    name: 'dashboard',\r\n    initialState, \r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchBalance.pending, (state) => {\r\n                state.status = 'loading...';\r\n            })\r\n            .addCase(fetchBalance.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.balance = action.payload; \r\n            })\r\n            .addCase(fetchBalance.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(fetchCardsData.fulfilled, (state,action)=>{\r\n             state.status ='succeeded';\r\n             state.cards = action.payload;\r\n            })\r\n            .addCase(fetchTableData.fulfilled,(state,action)=>{\r\n                state.status ='succeeded';\r\n                state.tableData = action.payload;\r\n            })\r\n            .addCase(fetchAnnouncements.fulfilled,(state,action)=>{\r\n                state.status ='succeeded';\r\n                state.Announcements =action.payload;\r\n            })\r\n            .addCase(fetchlatestNews.fulfilled,(state,action)=>{\r\n                state.status = 'succeeded';\r\n                state.latestNews = action.payload;\r\n            });\r\n    }\r\n});\r\n\r\n \r\n// Login logout functionality\r\nconst initialState1 = {\r\n    isAuthenticated: false,\r\n    // token: null,\r\n    // user: null,\r\n};\r\n// slice for Auth functionality\r\nconst authSlice = createSlice ({\r\n    name:'auth',\r\n    initialState: initialState1,\r\n    reducers:{\r\n        loginSuccess (state,action) {\r\n           state.isAuthenticated= true;\r\n            // state.token= action.payload.token;\r\n            // state.user=action.payload.user;\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated=false;\r\n            // state.token= null;\r\n            // state.user= null;\r\n        }       \r\n    }\r\n})\r\n\r\nconst rootReducer = combineReducers({\r\n    dashboard: dashboardSlice.reducer ,\r\n    auth: authSlice.reducer\r\n})\r\n  const persistConfig = {\r\n    key: 'root', \r\n    storage,          // Use localStorage\r\n    version: 1,      // Version\r\n  };\r\n  const persestedReducer = persistReducer(persistConfig,rootReducer)\r\n\r\n// Configure store\r\nexport const store = configureStore({\r\n    reducer: persestedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n          serializableCheck: {\r\n            ignoredActions: ['persist/PERSIST'], // Tell Redux to ignore the persist/persisted actions\r\n          },\r\n        }),   \r\n});\r\nexport const persistor = persistStore(store)\r\nexport const dashboardActions = dashboardSlice.actions\r\nexport const authActions = authSlice.actions\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}